jobs:
- job: VS2019
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
      mkdir build32
      cd build32
      cmake .. -G "Visual Studio 16 2019" -A Win32
      MSBuild.exe ..\build32\noexcept_benchmark.sln  /p:Platform="Win32"
      cd ..
      mkdir build32_no_throw
      cd build32_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF .. -G "Visual Studio 16 2019" -A Win32
      MSBuild.exe ..\build32_no_throw\noexcept_benchmark.sln  /p:Platform="Win32"
      cd ..
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      mkdir build64
      cd build64
      cmake .. -G "Visual Studio 16 2019" -A x64
      MSBuild.exe ..\build64\noexcept_benchmark.sln
      cd ..
      mkdir build64_no_throw
      cd build64_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF .. -G "Visual Studio 16 2019" -A x64
      MSBuild.exe ..\build64_no_throw\noexcept_benchmark.sln
      cd ..
    displayName: VS build, x86 (32-bit) and x64 (64-bit)
  - script: |
      .\build32\Release\noexcept_benchmark.exe
      .\build32_no_throw\Release\noexcept_benchmark.exe
    displayName: Benchmark results 32-bit (both including and excluding `throw exception{}`)
  - script: |
      .\build64\Release\noexcept_benchmark.exe
      .\build64_no_throw\Release\noexcept_benchmark.exe
    displayName: Benchmark results 64-bit (both including and excluding `throw exception{}`)

- job: VS2017
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
      mkdir build32
      cd build32
      cmake .. -G "Visual Studio 15 2017"
      MSBuild.exe ..\build32\noexcept_benchmark.sln  /p:Platform="Win32"
      cd ..
      mkdir build32_no_throw
      cd build32_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF .. -G "Visual Studio 15 2017"
      MSBuild.exe ..\build32_no_throw\noexcept_benchmark.sln  /p:Platform="Win32"
      cd ..
      call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      mkdir build64
      cd build64
      cmake .. -G "Visual Studio 15 2017 Win64"
      MSBuild.exe ..\build64\noexcept_benchmark.sln
      cd ..
      mkdir build64_no_throw
      cd build64_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF .. -G "Visual Studio 15 2017 Win64"
      MSBuild.exe ..\build64_no_throw\noexcept_benchmark.sln
      cd ..
    displayName: VS build, x86 (32-bit) and x64 (64-bit)
  - script: |
      .\build32\Release\noexcept_benchmark.exe
      .\build32_no_throw\Release\noexcept_benchmark.exe
    displayName: Benchmark results 32-bit (both including and excluding `throw exception{}`)
  - script: |
      .\build64\Release\noexcept_benchmark.exe
      .\build64_no_throw\Release\noexcept_benchmark.exe
    displayName: Benchmark results 64-bit (both including and excluding `throw exception{}`)

- job: Ubuntu1604
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      mkdir build
      cd build
      cmake ..
      make
      cd ..
      mkdir build_no_throw
      cd build_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF ..
      make
      cd ..
    displayName: GCC build
  - script: |
      ./build/noexcept_benchmark
      ./build_no_throw/noexcept_benchmark
    displayName: Benchmark results (both including and excluding `throw exception{}`)

- job: macOS1014
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: |
      mkdir build
      cd build
      cmake ..
      make
      cd ..
      mkdir build_no_throw
      cd build_no_throw
      cmake -D NOEXCEPT_BENCHMARK_THROW_EXCEPTION:BOOL=OFF ..
      make
      cd ..
    displayName: Clang build macOS-10.14
  - script: |
      ./build/noexcept_benchmark
      ./build_no_throw/noexcept_benchmark
    displayName: Benchmark results (both including and excluding `throw exception{}`)
